[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_name }}"
authors = [
    { name = "{{ cookiecutter.author }}", email = "{{ cookiecutter.email }}" },
]
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = "{{ cookiecutter.requires_python }}"
license = { text = "{{ cookiecutter.license }}" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]
dynamic = ["version"]
{% if cookiecutter.command_line_interface|lower == 'argparse' -%}
dependencies = []
{%- endif -%}
{% if cookiecutter.command_line_interface|lower == 'no command-line interface' -%}
dependencies = []
{%- endif -%}
{% if cookiecutter.command_line_interface|lower == 'click' %}
dependencies = [
    "click"
]
{%- endif -%}
{% if cookiecutter.command_line_interface|lower == 'typer' -%}
dependencies = [
    "typer"
]
{%- endif %}

[project.optional-dependencies]
build = ["build", "invoke", "pip-tools"]
dev = [
    "black",
    "isort",
    "invoke",
    "flake8",
    "mypy",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "types-setuptools",
]
docs = [
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-material",
    "mkdocs-section-index",
    "mkdocstrings[python]",
    "pymdown-extensions",
]

[project.urls]
Repository = "{{ cookiecutter.repo_url }}"
Issues = "{{ cookiecutter.issues_url }}"
{% if cookiecutter.command_line_interface == "Argparse" %}
[project.scripts]
{{ cookiecutter.project_name }} = "{{ cookiecutter.project_slug }}.cli.app:main"
{% endif %}
{%- if cookiecutter.command_line_interface == "Click" %}
[project.scripts]
{{ cookiecutter.project_name }} = "{{ cookiecutter.project_slug }}.cli.app:cli"
{% endif %}
{%- if cookiecutter.command_line_interface == "Typer" %}
[project.scripts]
{{ cookiecutter.project_name }} = "{{ cookiecutter.project_slug }}.cli.app:cli"
{%- endif %}

[tool.setuptools.dynamic]
version = { attr = "{{ cookiecutter.project_slug }}.__version__" }

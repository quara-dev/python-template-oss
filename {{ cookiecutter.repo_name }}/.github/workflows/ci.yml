name: Continuous Integration

on:
  push:
    branches: [next, main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [next, main]

jobs:
  test:
    name: Lint and tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Install dependencies
        run: |
          python -m pip install --user invoke
          python scripts/install.py -e dev

      - name: Ensure code is formatted
        run: python -m invoke format --check

      - name: Lint with flake8
        run: python -m invoke lint

      - name: Lint with mypy
        run: python -m invoke check --include-tests

      - name: Test with pytest
        run: python -m invoke test --coverage
{% if cookiecutter.sonar_integration == 'Sonarcloud' %}
  sonarcloud:
    name: Run SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --user invoke
          python scripts/install.py -e dev

      - name: Test with pytest
        run: python -m invoke test --coverage

      - name: Set project version for Sonarcloud analysis
        run: echo "sonar.projectVersion=$(python scripts/version.py)" >> sonar-project.properties

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          SONAR_TOKEN: {% raw %}${{ secrets.SONAR_TOKEN }}{% endraw %}
{%- elif cookiecutter.sonar_integration == 'Sonarqube' %}
  sonarqube:
    name: Run SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --user invoke
          python scripts/install.py -e dev

      - name: Test with pytest
        run: python -m invoke test --coverage

      - name: Set project version for Sonarcloud analysis
        run: echo "sonar.projectVersion=$(python scripts/version.py)" >> sonar-project.properties

      - name: Analyse with Sonarqube
        uses: kitabisa/sonarqube-action@v1.2.0
        with:
          host: {% raw %}${{ secrets.SONAR_HOST }}{% endraw %}
          login: {% raw %}${{ secrets.SONAR_TOKEN }}{% endraw %}
{% endif %}
  semantic_release:
    name: Run semantic release
    runs-on: ubuntu-latest
    needs: [test, sonar]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: "${% raw %}{{ secrets.COMMIT_KEY }}{% endraw %}"

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install semantic release
        run: |
          npm i -g \
            semantic-release \
            @semantic-release/commit-analyzer \
            @semantic-release/changelog \
            @semantic-release/exec \
            conventional-changelog-conventionalcommits

      - name: Execute semantic release
        run: |
          semantic-release --debug

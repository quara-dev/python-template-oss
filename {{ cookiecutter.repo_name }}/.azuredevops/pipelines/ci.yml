---
pool:
  vmImage: "ubuntu-latest"

# Trigger using Branch Policies. DO NOT use azure repos triggers
trigger: none

{%- if cookiecutter.sonar_integration != 'Do not use Sonarcloud or Sonarqube' %}
variables:
  # Update sonar cloud endpoint name if required
  sonarEndpointName: "SC"
  {%- if cookiecutter.sonar_integration == '' %}
  sonarCloudOrganization: "{{ cookiecutter.sonarcloud_organization }}"
  {%- endif %}
  sonarProjectKey: "{{ cookiecutter.sonarcloud_key }}"
{%- endif %}

stages:
  - stage: Continuous Integration
    jobs:
      - job: Lint and test
        strategy:
          matrix:
            PYTHON_38:
              PYTHON_VERSION: "3.8"
            PYTHON_39:
              PYTHON_VERSION: "3.9"
            PYTHON_310:
              PYTHON_VERSION: "3.10"
            PYTHON_311:
              PYTHON_VERSION: "3.11"
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: $(PYTHON_VERSION)

          - script: |
              python -m pip install --user invoke
              python3 scripts/install.py -e dev
            displayName: Install project and dependencies

          - script: python -m invoke lint
            displayName: Lint with flake8

          - script: python -m invoke check --include-tests
            displayName: Lint with mypy

          - script: python -m invoke check --coverage
            displayName: Test with pytest

          # Only test result for Python 3.11 will be available
          # If you use multiple publish code coverage tasks in the pipeline, the summary and report is shown for the last task. Any previously uploaded data is ignored.
          # Reference: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/publish-code-coverage-results-v1?view=azure-pipelines#is-code-coverage-data-merged-when-multiple-files-are-provided-as-input-to-the-task-or-multiple-tasks-are-used-in-the-pipeline
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "$(System.DefaultWorkingDirectory)/**/junit*.xml"
            displayName: Publish tests results

          # Only code coverage for Python 3.11 will be available
          # If you use multiple publish code coverage tasks in the pipeline, the summary and report is shown for the last task. Any previously uploaded data is ignored.
          # Reference: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/publish-code-coverage-results-v1?view=azure-pipelines#is-code-coverage-data-merged-when-multiple-files-are-provided-as-input-to-the-task-or-multiple-tasks-are-used-in-the-pipeline
          - task: PublishCodeCoverageResults@1
            condition: succeededOrFailed()
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/cov.xml"
              reportDirectory: "$(System.DefaultWorkingDirectory)/**/coverage-report"
            displayName: Publish code coverage
{% if cookiecutter.sonar_integration == 'Sonarcloud' %}
      - job: Run SonarCloud analysis
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.8"

          - script: |
              python -m pip install --user invoke
              python3 scripts/install.py -e dev
            displayName: Install project and dependencies

          - script: python -m invoke check --coverage
            displayName: Test with pytest

          - task: SonarCloudPrepare@1
            inputs:
              organization: "$(sonarCloudOrganization)"
              SonarCloud: "$(sonarEndpointName)"
              scannerMode: "CLI"
              configMode: "manual"
              cliProjectKey: "$(sonarProjectKey)"
            displayName: Prepare SonarCloud analysis

          - task: SonarCloudAnalyze@1
            displayName: Run SonarCloud analysis

          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: "300"
            displayName: Wait for SnarCloud to publish result on the Pipeline build summary
{% elif cookiecutter.sonar_integration == 'Sonarqube' %}
      - job: Run Sonarqube analysis
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.8"

          - script: |
              python -m pip install --user invoke
              python3 scripts/install.py -e dev
            displayName: Install project and dependencies

          - script: python -m invoke check --coverage
            displayName: Test with pytest

          - task: SonarQubePrepare@5
            inputs:
              SonarQube: "$(sonarEndpointName)"
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: '$(sonarProjectKey)'

          # Run Code Analysis task
          - task: SonarQubeAnalyze@5

          # Publish Quality Gate Result task
          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'
{% endif %}
